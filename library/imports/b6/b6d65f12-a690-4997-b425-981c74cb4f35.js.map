{"version":3,"sources":["assets\\Script\\level\\LevelView.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,4EAA4E;AAC5E,mBAAmB;AACnB,sFAAsF;AACtF,8BAA8B;AAC9B,sFAAsF;;;;;;;;AAEtF,oCAA6D;AAE7D,oCAAoE;AACpE,yCAAkC;AAElC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC;AAG5C,IAAqB,SAAS,GAA9B,MAAqB,SAAU,SAAQ,EAAE,CAAC,SAAS;IACrC,MAAM;QACZ,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,uBAAe,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QACvD,MAAM,WAAW,GAAG,oBAAY,CAAC,wBAAgB,CAAC,CAAC;QACnD,IAAI,CAAC,WAAW,EAAE;YACd,oBAAY,CAAC,wBAAgB,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC;SACrD;IACL,CAAC;IAES,KAAK;QACX,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,YAAY,CAAC,SAAsB;QACtC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAC3B,CAAC;IAES,eAAe;QACrB,MAAM,SAAS,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACzC,MAAM,aAAa,GAAG,oBAAY,CAAgB,wBAAgB,CAAC,CAAC;QACpE,MAAM,UAAU,GAAG,aAAa,CAAC,UAAU,CAAC;QAC5C,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;YAC3B,MAAM,SAAS,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;YAC1C,IAAI,SAAS,CAAC,EAAE,IAAI,UAAU,GAAG,CAAC,EAAE;gBAChC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;aAC/B;iBAAM;gBACH,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;aAChC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,eAAe;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,kBAAQ,CAAC,CAAC;IACvD,CAAC;IAES,SAAS;QACf,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,uBAAe,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;IAC5D,CAAC;CACJ,CAAA;AAtCoB,SAAS;IAD7B,OAAO;GACa,SAAS,CAsC7B;kBAtCoB,SAAS","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport { EntryLevelEvent, UserSaveDataName } from '../const';\r\nimport { LevelConfig, UserLevelInfo } from '../gamePlay/GameTypes';\r\nimport { getLocalData, HasLocalData, setLocalData } from '../Utils';\r\nimport LevelBtn from './LevelBtn';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class LevelView extends cc.Component {\r\n    protected onLoad(): void {\r\n        this.node.on(EntryLevelEvent, this.onEntryLevel, this);\r\n        const hasSaveData = HasLocalData(UserSaveDataName);\r\n        if (!hasSaveData) {\r\n            setLocalData(UserSaveDataName, { maxLevelId: 0 });\r\n        }\r\n    }\r\n\r\n    protected start(): void {\r\n        this.adjustLevelBtns();\r\n    }\r\n\r\n    public onEntryLevel(levelInfo: LevelConfig): void {\r\n        console.log(levelInfo);\r\n    }\r\n\r\n    protected adjustLevelBtns(): void {\r\n        const levelBtns = this.getAllLevelBtns();\r\n        const userLevelInfo = getLocalData<UserLevelInfo>(UserSaveDataName);\r\n        const maxLevelId = userLevelInfo.maxLevelId;\r\n        levelBtns.forEach((levelBtn) => {\r\n            const levelInfo = levelBtn.getLevelInfo();\r\n            if (levelInfo.id <= maxLevelId + 1) {\r\n                levelBtn.setBtnActive(true);\r\n            } else {\r\n                levelBtn.setBtnActive(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    public getAllLevelBtns(): LevelBtn[] {\r\n        return this.node.getComponentsInChildren(LevelBtn);\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        this.node.off(EntryLevelEvent, this.onEntryLevel, this);\r\n    }\r\n}\r\n"]}