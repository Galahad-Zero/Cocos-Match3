{"version":3,"sources":["assets\\Script\\gamePlay\\GameMgr.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import PlayPanel from './PlayPanel';\r\nimport { Direction, TOUCH_BLOCK_EVENT } from './GameConst';\r\nimport TouchHandler, {\r\n    TouchDetailEvent,\r\n    TouchDetailEventType,\r\n} from './TouchHandler';\r\nimport {\r\n    BlockConfig,\r\n    BlockSpecialType,\r\n    BlockType,\r\n    EliminateCheckInfo,\r\n    EliminateScore,\r\n    GameCheckInfo,\r\n    LevelConfig,\r\n    Location,\r\n    UserLevelInfo,\r\n} from './GameTypes';\r\nimport { getSwapLocation, isNeighborLocation } from './common/GameUtils';\r\nimport {\r\n    releaseSpecialBlock,\r\n    specialBlockGenerator,\r\n} from './common/EliminateUtils';\r\nimport GameUI from './ui/GameUI';\r\nimport EffectMgr from './effects/EffectMgr';\r\nimport AudioMgr from '../AudioMgr';\r\nimport BlockMgr from './block/BlockMgr';\r\nimport GameFsm, { GameState } from './common/GameFsm';\r\nimport { getLocalData, setLocalData } from '../Utils';\r\nimport { UserSaveDataName } from '../const';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GameMgr extends cc.Component {\r\n    @property(PlayPanel)\r\n    playPanel: PlayPanel = null;\r\n\r\n    @property(GameUI)\r\n    gameUI: GameUI = null;\r\n\r\n    @property(TouchHandler)\r\n    touchHandler: TouchHandler = null;\r\n\r\n    @property(BlockMgr)\r\n    blockMgr: BlockMgr = null;\r\n\r\n    @property(EffectMgr)\r\n    effectMgr: EffectMgr = null;\r\n\r\n    @property(AudioMgr)\r\n    audioMgr: AudioMgr = null;\r\n\r\n    _selectedLocation: Location = null;\r\n\r\n    _gameFsm: GameFsm = null;\r\n    _gameCheckInfo: GameCheckInfo = null;\r\n\r\n    protected onLoad(): void {\r\n        this._gameFsm = new GameFsm(GameState.READY);\r\n        this._gameFsm.onStateChange(this.onStateChange.bind(this));\r\n        this.touchHandler.node.on(TOUCH_BLOCK_EVENT, this.onTouchEvent, this);\r\n    }\r\n\r\n    protected start(): void {\r\n        this.audioMgr.playMusic();\r\n    }\r\n\r\n    public initGamePanel(levelConfig: LevelConfig): void {\r\n        this.playPanel.initGamePanel(\r\n            levelConfig,\r\n            this.blockMgr,\r\n            this.effectMgr\r\n        );\r\n        this.gameUI.initGameUI(0, levelConfig.stepLimit);\r\n        // 初始化游戏面板后，转换到游玩状态\r\n        this._gameFsm.changeState(GameState.PLAYING);\r\n    }\r\n\r\n    /**\r\n     * 游戏状态改变回调\r\n     *\r\n     * @param fromState 当前状态\r\n     * @param toState 新状态\r\n     */\r\n    public onStateChange(fromState: GameState, toState: GameState): void {\r\n        switch (toState) {\r\n            case GameState.READY:\r\n                this.onReady();\r\n                break;\r\n            case GameState.PLAYING:\r\n                this.onPlaying();\r\n                break;\r\n            case GameState.CHECKING:\r\n                this.onChecking();\r\n                break;\r\n            case GameState.ELIMINATING:\r\n                this.onEliminating();\r\n                break;\r\n            case GameState.DROPPING:\r\n                this.onDropping();\r\n                break;\r\n            case GameState.GAME_OVER:\r\n                this.onGameOver();\r\n                break;\r\n            case GameState.GAME_WIN:\r\n                this.onGameWin();\r\n                break;\r\n        }\r\n    }\r\n\r\n    public onTouchEvent(event: TouchDetailEvent): void {\r\n        // 非玩家操作 或 没有步数\r\n        if (!this._gameFsm.canPlayerOperate() || !this.gameUI.haveStepCount()) {\r\n            return;\r\n        }\r\n        // 玩家可操作\r\n        const { type, location } = event;\r\n        if (type === TouchDetailEventType.click) {\r\n            this.onClickBlock(location);\r\n        } else if (type === TouchDetailEventType.drag) {\r\n            this.onDragBlock(location, event.direction || Direction.NONE);\r\n        }\r\n    }\r\n\r\n    // 点击方块\r\n    protected onClickBlock(location: Location): void {\r\n        if (!this._selectedLocation) {\r\n            this._selectedLocation = location;\r\n            return;\r\n        }\r\n        // 点击方块\r\n        const isSameBlock =\r\n            this._selectedLocation.row === location.row &&\r\n            this._selectedLocation.column === location.column;\r\n        if (isSameBlock) {\r\n            // 点击同一个方块，取消选中\r\n            this._selectedLocation = null;\r\n            return;\r\n        }\r\n        const isNeighbor = isNeighborLocation(this._selectedLocation, location);\r\n        if (isNeighbor) {\r\n            // 点击相邻方块，交换方块\r\n            this.swapBlocks(this._selectedLocation, location);\r\n            this._selectedLocation = null;\r\n        } else {\r\n            // 点击非相邻方块，更新选中\r\n            this._selectedLocation = location;\r\n        }\r\n    }\r\n\r\n    // 拖动方块\r\n    protected onDragBlock(location: Location, direction: Direction): void {\r\n        const swapLocation = getSwapLocation(location, direction);\r\n        if (this.playPanel.isInBounds(swapLocation)) {\r\n            // 以交换后的方块位置优先级更高\r\n            this.swapBlocks(swapLocation, location);\r\n        }\r\n        this._selectedLocation = null;\r\n    }\r\n\r\n    protected swapBlocks(location1: Location, location2: Location): void {\r\n        this._gameCheckInfo = this.generatetBaseGameCheckInfo();\r\n        // 交换方块\r\n        this._gameCheckInfo.checkBlockEntry = [location1, location2];\r\n        // 1. 交换方块\r\n        const gameMapInfo = this._gameCheckInfo.gameMapInfo;\r\n        const tempConfig = gameMapInfo[location2.row][location2.column];\r\n        gameMapInfo[location2.row][location2.column] =\r\n            gameMapInfo[location1.row][location1.column];\r\n        gameMapInfo[location1.row][location1.column] = tempConfig;\r\n\r\n        this._gameCheckInfo.swapBlocks = [location1, location2];\r\n        this.audioMgr.playSwapAudio();\r\n        // 减少步数\r\n        // 转换到检查消除状态\r\n        this._gameFsm.changeState(GameState.CHECKING);\r\n        // 2. 规则检查\r\n        // 3. 撤回 或 消除\r\n        // 4. 掉落 执行第 2 步\r\n        // 5. 结束\r\n    }\r\n\r\n    public onReady(): void {\r\n        console.log('游戏状态准备完成');\r\n    }\r\n\r\n    public onPlaying(): void {\r\n        console.log('游戏状态游玩中');\r\n        this._gameCheckInfo = null;\r\n        this.touchHandler.setEnabled(true);\r\n    }\r\n\r\n    public onChecking(): void {\r\n        // 检查消除,并标记可消除方块\r\n        // console.log('游戏状态检查消除');\r\n        this.touchHandler.setEnabled(false);\r\n\r\n        const excludeLocations = [];\r\n        for (const entry of this._gameCheckInfo.checkBlockEntry) {\r\n            const contiguousLocations = this.playPanel.getContiguousBlocks(\r\n                entry,\r\n                this._gameCheckInfo.gameMapInfo,\r\n                excludeLocations\r\n            );\r\n            // 如果连续方块数量大于等于3，则标记为可消除\r\n            if (contiguousLocations.length >= 3) {\r\n                // 将可消除方块加入排除列表\r\n                excludeLocations.push(...contiguousLocations);\r\n                // 将可消除方块加入可消除方块数组\r\n                this._gameCheckInfo.canEliminateCheckInfos.push({\r\n                    entryLocation: entry,\r\n                    eliminateBlockType: BlockSpecialType.NONE,\r\n                    contiguousLocations,\r\n                });\r\n            }\r\n        }\r\n        // 检查特殊炸弹方块\r\n        if (this._gameCheckInfo.swapBlocks) {\r\n            const [location1, location2] = this._gameCheckInfo.swapBlocks;\r\n            const blockConfig1 =\r\n                this._gameCheckInfo.gameMapInfo[location1.row][\r\n                    location1.column\r\n                ];\r\n            const blockConfig2 =\r\n                this._gameCheckInfo.gameMapInfo[location2.row][\r\n                    location2.column\r\n                ];\r\n            if (blockConfig1.special === BlockSpecialType.SPECIAL_BOOM) {\r\n                // 特殊炸弹方块，直接标记为可消除\r\n                this._gameCheckInfo.canEliminateCheckInfos.push({\r\n                    entryLocation: location2,\r\n                    eliminateBlockType: BlockSpecialType.NONE,\r\n                    contiguousLocations: [location1],\r\n                });\r\n            }\r\n            if (blockConfig2.special === BlockSpecialType.SPECIAL_BOOM) {\r\n                // 特殊炸弹方块，直接标记为可消除\r\n                this._gameCheckInfo.canEliminateCheckInfos.push({\r\n                    entryLocation: location1,\r\n                    eliminateBlockType: BlockSpecialType.NONE,\r\n                    contiguousLocations: [location2],\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this._gameCheckInfo.canEliminateCheckInfos.length > 0) {\r\n            // 减少步数\r\n            this._gameCheckInfo.swapBlocks && this.gameUI.decrementStepCount();\r\n            // 转换到消除状态\r\n            this._gameFsm.changeState(GameState.ELIMINATING);\r\n        } else {\r\n            if (this._gameCheckInfo.swapBlocks) {\r\n                const [location1, location2] = this._gameCheckInfo.swapBlocks;\r\n                // 方块交换再还原\r\n                this.playPanel.swapAndBackBlocks(location1, location2, () => {\r\n                    // 没有可消除方块，方块交换再还原，转换到游玩状态\r\n                    this._gameFsm.changeState(GameState.PLAYING);\r\n                });\r\n            } else {\r\n                // 没有可消除方块 且 没有交换方块，检查游戏是否结束\r\n                this.checkGameOver();\r\n            }\r\n        }\r\n    }\r\n\r\n    public onEliminating(): void {\r\n        // 获取已经消除的方块\r\n        const alreadyEliminateBlocks: Array<Location> =\r\n            this._gameCheckInfo.canEliminateCheckInfos.reduce((acc, info) => {\r\n                return acc.concat(info.contiguousLocations);\r\n            }, [] as Array<Location>);\r\n        // 消除方块,并释放特性\r\n        for (const eliminateCheckInfo of this._gameCheckInfo\r\n            .canEliminateCheckInfos) {\r\n            // 生成特殊方块\r\n            specialBlockGenerator(eliminateCheckInfo, this._gameCheckInfo);\r\n            // 释放特性, 消除额外方块\r\n            releaseSpecialBlock(\r\n                eliminateCheckInfo,\r\n                alreadyEliminateBlocks,\r\n                this._gameCheckInfo\r\n            );\r\n        }\r\n        // 计算得分\r\n        let score = 0;\r\n        for (const eliminateCheckInfo of this._gameCheckInfo\r\n            .canEliminateCheckInfos) {\r\n            const blockCount = eliminateCheckInfo.contiguousLocations.length;\r\n            // 基础得分\r\n            score += EliminateScore.EliminateBlockScore * blockCount;\r\n            // 特殊得分\r\n            switch (eliminateCheckInfo.eliminateBlockType) {\r\n                case BlockSpecialType.ROW:\r\n                    score += EliminateScore.Base4RowScore;\r\n                    break;\r\n                case BlockSpecialType.COLUMN:\r\n                    score += EliminateScore.Base4ColumnScore;\r\n                    break;\r\n                case BlockSpecialType.BOOM:\r\n                    score += EliminateScore.Irregular5Score;\r\n                    break;\r\n                case BlockSpecialType.SPECIAL_BOOM:\r\n                    score += EliminateScore.Base5Score;\r\n                    break;\r\n            }\r\n        }\r\n        // 连锁加成\r\n        score *= this._gameCheckInfo.chainCount;\r\n        // 增加得分\r\n        this.gameUI.incrementScore(score);\r\n        // 消除方块,并执行动画\r\n        this.effectMgr.playComboAudio(this._gameCheckInfo.chainCount);\r\n        this.playPanel.eliminateBlocks(this._gameCheckInfo, () => {\r\n            this._gameFsm.changeState(GameState.DROPPING);\r\n        });\r\n        // console.log('游戏状态消除,并释放特性');\r\n        // this._gameFsm.changeState(GameState.DROPPING);\r\n    }\r\n\r\n    public onDropping(): void {\r\n        // 随机产生并掉落方块\r\n        // 1. 生成特殊方块\r\n        this.playPanel.generateNewSpecialBlocks(this._gameCheckInfo);\r\n        // 2. 掉落随机方块补齐位置\r\n        this.playPanel.dropRandomBlocks((entryList: Array<Location>) => {\r\n            const baseGameCheckInfo = this.generatetBaseGameCheckInfo();\r\n            baseGameCheckInfo.checkBlockEntry = entryList;\r\n            // 连锁次数 + 1\r\n            baseGameCheckInfo.chainCount = this._gameCheckInfo.chainCount + 1;\r\n            this._gameCheckInfo = baseGameCheckInfo;\r\n            console.log('drop check: ', this._gameCheckInfo);\r\n            this._gameFsm.changeState(GameState.CHECKING);\r\n        });\r\n    }\r\n\r\n    public onGameOver(): void {\r\n        // 显示游戏结束界面\r\n        this.gameUI.showGameOverPanel();\r\n        this.audioMgr.stopMusic();\r\n        this.touchHandler.setEnabled(false);\r\n    }\r\n\r\n    public onGameWin(): void {\r\n        // 显示过关界面\r\n        this.gameUI.showGameWinPanel();\r\n        this.audioMgr.stopMusic();\r\n        // 更新最大关卡ID\r\n        const saveData = getLocalData<UserLevelInfo>(UserSaveDataName);\r\n        if (saveData.maxLevelId < this.playPanel.getLevelConfig().id) {\r\n            setLocalData(UserSaveDataName, {\r\n                maxLevelId: this.playPanel.getLevelConfig().id,\r\n            });\r\n        }\r\n        this.touchHandler.setEnabled(false);\r\n    }\r\n\r\n    /**\r\n     * 检查游戏是否结束\r\n     */\r\n    public checkGameOver(): void {\r\n        const curScore = this.gameUI.getScore();\r\n        const targetScore = this.playPanel.getLevelConfig().targetScore;\r\n        if (curScore >= targetScore) {\r\n            // 得分大于等于目标分数，游戏胜利\r\n            this._gameFsm.changeState(GameState.GAME_WIN);\r\n        }\r\n        // 检查游戏是否结束, 还有步数则继续游戏，否则游戏结束\r\n        else if (this.gameUI.haveStepCount()) {\r\n            const { chainCount } = this._gameCheckInfo;\r\n            this.effectMgr.playCommentAudio(chainCount - 1);\r\n            // 还有步数，继续游戏\r\n            this._gameFsm.changeState(GameState.PLAYING);\r\n        } else {\r\n            // 没有步数，游戏结束\r\n            this._gameFsm.changeState(GameState.GAME_OVER);\r\n        }\r\n    }\r\n\r\n    public backToLevelSelect(): void {\r\n        cc.director.loadScene('LevelSelect');\r\n    }\r\n\r\n    public generatetBaseGameCheckInfo(): GameCheckInfo {\r\n        // 生成基础游戏检查信息\r\n        const gameMapInfo = this.playPanel.getBlockMapInfo();\r\n        const checkBlockEntry: Location[] = [];\r\n        const canEliminateBlocks: Array<EliminateCheckInfo> = [];\r\n        const eliminateScore = 0;\r\n        const newSpecailBlocks: Record<string, BlockConfig> = {};\r\n        return {\r\n            gameMapInfo,\r\n            checkBlockEntry,\r\n            swapBlocks: null,\r\n            chainCount: 1,\r\n            canEliminateCheckInfos: canEliminateBlocks,\r\n            eliminateScore,\r\n            newSpecailBlocks,\r\n        };\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        cc.audioEngine.stopAllEffects();\r\n        cc.audioEngine.stopMusic();\r\n    }\r\n}\r\n"]}