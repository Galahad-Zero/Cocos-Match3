{"version":3,"sources":["assets\\Script\\gamePlay\\TouchHandler.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Direction, TOUCH_BLOCK_EVENT } from './GameConst';\nimport { getDirection } from './common/GameUtils';\nimport PlayPanel from './PlayPanel';\n\nconst { ccclass, property } = cc._decorator;\n\nexport enum TouchDetailEventType {\n    click,\n    drag,\n}\n\nexport interface TouchDetailEvent {\n    type: TouchDetailEventType;\n    location: { row: number; column: number };\n    direction?: Direction;\n}\n\n@ccclass\nexport default class TouchHandler extends cc.Component {\n    @property(cc.Node)\n    protected target: cc.Node = null;\n\n    @property(PlayPanel)\n    playPanel: PlayPanel = null;\n\n    _isEnabled: boolean = true;\n    _isDragging: boolean = false;\n    _hasEmitEvent: boolean = false;\n    _startPos: cc.Vec2 = null;\n\n    protected onLoad(): void {\n        this.initTouchEvents();\n    }\n\n    protected initTouchEvents(): void {\n        this.target.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\n        this.target.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.target.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\n    }\n\n    protected onTouchStart(e: cc.Event.EventTouch): void {\n        if (!this._isEnabled) {\n            return;\n        }\n        this._isDragging = false;\n        this._hasEmitEvent = false;\n        const pos = this.target.convertToNodeSpaceAR(e.getLocation());\n        this._startPos = pos;\n    }\n\n    protected onTouchMove(e: cc.Event.EventTouch): void {\n        if (!this._isEnabled) {\n            return;\n        }\n        const pos = this.target.convertToNodeSpaceAR(e.getLocation());\n        const delta = pos.sub(this._startPos);\n        const direction = this.getDirection(delta);\n\n        if (direction === Direction.NONE) {\n            // 如果方向为NONE，则不发送事件\n            return;\n        }\n        this._isDragging = true;\n        // const block = this.playPanel.getBlockByPosition(pos);\n        const location = this.playPanel.getLocationByPosition(pos);\n        // 发送拖动事件\n        if (!this._hasEmitEvent) {\n            this.node.emit(TOUCH_BLOCK_EVENT, {\n                type: TouchDetailEventType.drag,\n                location,\n                direction,\n            });\n            this._hasEmitEvent = true;\n        }\n    }\n\n    protected onTouchEnd(e: cc.Event.EventTouch): void {\n        if (!this._isEnabled) {\n            return;\n        }\n        if (!this._isDragging && !this._hasEmitEvent) {\n            const pos = this.target.convertToNodeSpaceAR(e.getLocation());\n            const location = this.playPanel.getLocationByPosition(pos);\n            // 如果未拖动，则发送点击事件\n            this.node.emit(TOUCH_BLOCK_EVENT, {\n                type: TouchDetailEventType.click,\n                location: location,\n            });\n            this._hasEmitEvent = true;\n        }\n        this._isDragging = false;\n        this._startPos = null;\n    }\n\n    protected getDirection(delta: cc.Vec2, threshold: number = 10): Direction {\n        const absDelta = delta.mag();\n        if (absDelta < threshold) {\n            return Direction.NONE;\n        }\n        return getDirection(delta);\n    }\n\n    public setEnabled(enabled: boolean): void {\n        this._isEnabled = enabled;\n    }\n\n    protected onDestroy(): void {\n        this.target.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\n        this.target.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n        this.target.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\n    }\n}\n"]}