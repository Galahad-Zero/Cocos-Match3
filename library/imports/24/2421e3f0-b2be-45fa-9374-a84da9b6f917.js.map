{"version":3,"sources":["assets\\Script\\gamePlay\\block\\BlockMgr.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,6DAAsD;AACtD,2CAAoC;AAEpC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC;AAG5C,IAAqB,QAAQ,GAA7B,MAAqB,QAAS,SAAQ,EAAE,CAAC,SAAS;IAAlD;;QAEI,gBAAW,GAAc,IAAI,CAAC;QAK9B,kBAAa,GAAyB,EAAE,CAAC;QAEzC,eAAU,GAAgB,IAAI,CAAC;IAuDnC,CAAC;IArDG;;;;OAIG;IACI,aAAa,CAAC,SAAoB;QACrC,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAC1B,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,KAAK,SAAS,CAC3C,CAAC;IACN,CAAC;IAED;;;;OAIG;IACI,QAAQ,CAAC,WAAwB,EAAE,MAAgB;QACtD,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACxD,IAAI,CAAC,UAAU,EAAE;YACb,OAAO,IAAI,CAAC;SACf;QACD,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;QACvE,IAAI,CAAC,KAAK,EAAE;YACR,MAAM,QAAQ,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAClD,MAAM,SAAS,GAAG,QAAQ,CAAC,YAAY,CAAC,mBAAS,CAAC,CAAC;YACnD,SAAS,CAAC,KAAK,CAAC,WAAW,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;YACjD,OAAO,SAAS,CAAC;SACpB;QACD,OAAO,KAAK,CAAC,YAAY,CAAC,mBAAS,CAAC,CAAC;IACzC,CAAC;IAED;;;OAGG;IACI,QAAQ,CAAC,KAAgB;QAC5B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAEM,YAAY;QACf,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAClB,IAAI,CAAC,UAAU,GAAG,IAAI,EAAE,CAAC,QAAQ,CAAC,mBAAS,CAAC,CAAC;SAChD;QACD,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED;;OAEG;IACO,SAAS;QACf,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QAC3C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IAC3B,CAAC;CACJ,CAAA;AA9DG;IADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;6CACU;AAK9B;IAHC,QAAQ,CAAC;QACN,IAAI,EAAE,CAAC,4BAAkB,CAAC;KAC7B,CAAC;+CACuC;AAPxB,QAAQ;IAD5B,OAAO;GACa,QAAQ,CAgE5B;kBAhEoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["import { BlockConfig, BlockType } from '../GameTypes';\r\nimport BlockStyleProperty from './BlockStyleProperty';\r\nimport BaseBlock from './BaseBlock';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BlockMgr extends cc.Component {\r\n    @property(cc.Prefab)\r\n    blockPrefab: cc.Prefab = null;\r\n\r\n    @property({\r\n        type: [BlockStyleProperty],\r\n    })\r\n    blockStyleArr: BlockStyleProperty[] = [];\r\n\r\n    _blockLoop: cc.NodePool = null;\r\n\r\n    /**\r\n     * 根据方块类型获取方块样式\r\n     * @param blockType 方块类型\r\n     * @returns 方块样式\r\n     */\r\n    public getBlockStyle(blockType: BlockType): BlockStyleProperty {\r\n        return this.blockStyleArr.find(\r\n            (style) => style.blockType === blockType\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 根据方块配置获取方块\r\n     * @param blockConfig 方块配置\r\n     * @returns 方块\r\n     */\r\n    public getBlock(blockConfig: BlockConfig, parent?: cc.Node): BaseBlock {\r\n        const blockStyle = this.getBlockStyle(blockConfig.type);\r\n        if (!blockStyle) {\r\n            return null;\r\n        }\r\n        const block = this.getBlockLoop().get(blockConfig, blockStyle, parent);\r\n        if (!block) {\r\n            const newBlock = cc.instantiate(this.blockPrefab);\r\n            const blockComp = newBlock.getComponent(BaseBlock);\r\n            blockComp.reuse(blockConfig, blockStyle, parent);\r\n            return blockComp;\r\n        }\r\n        return block.getComponent(BaseBlock);\r\n    }\r\n\r\n    /**\r\n     * 回收方块\r\n     * @param block 方块\r\n     */\r\n    public putBlock(block: BaseBlock): void {\r\n        this._blockLoop.put(block.node);\r\n    }\r\n\r\n    public getBlockLoop(): cc.NodePool {\r\n        if (!this._blockLoop) {\r\n            this._blockLoop = new cc.NodePool(BaseBlock);\r\n        }\r\n        return this._blockLoop;\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    protected onDestroy(): void {\r\n        this._blockLoop && this._blockLoop.clear();\r\n        this._blockLoop = null;\r\n    }\r\n}\r\n"]}