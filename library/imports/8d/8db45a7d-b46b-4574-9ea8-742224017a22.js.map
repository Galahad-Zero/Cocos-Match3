{"version":3,"sources":["assets\\Script\\GameSetting.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,4EAA4E;AAC5E,mBAAmB;AACnB,sFAAsF;AACtF,8BAA8B;AAC9B,sFAAsF;;;;;;;;AAEtF,mCAA8C;AAE9C,mCAAqD;AAErD,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC;AAG5C,IAAqB,WAAW,GAAhC,MAAqB,WAAY,SAAQ,EAAE,CAAC,SAAS;IAArD;;QAEI,iBAAY,GAAc,IAAI,CAAC;QAG/B,oBAAe,GAAc,IAAI,CAAC;QAElC,YAAO,GAAgB,EAAE,SAAS,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC;QA0BzD,gCAAgC;QAChC,0EAA0E;QAC1E,gFAAgF;QAChF,IAAI;IACR,CAAC;IA5Ba,KAAK;QACX,IAAI,CAAC,OAAO,GAAG,oBAAY,CAAc,2BAAmB,CAAC,CAAC;QAC9D,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QACpD,IAAI,CAAC,eAAe,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;QAC1D,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAES,UAAU;QAChB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;QACjE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;IAC3E,CAAC;IAED,iBAAiB,CAAC,MAAM;QACpB,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;QACzC,oBAAY,CAAC,2BAAmB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAChD,EAAE,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC1D,CAAC;IAED,oBAAoB,CAAC,MAAM;QACvB,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC;QAC5C,oBAAY,CAAC,2BAAmB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAChD,EAAE,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;IAC/D,CAAC;CAMJ,CAAA;AAnCG;IADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;iDACW;AAG/B;IADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;oDACc;AALjB,WAAW;IAD/B,OAAO;GACa,WAAW,CAqC/B;kBArCoB,WAAW","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport { UserSettingItemName } from './const';\r\nimport { UserSetting } from './type/ConfigTypes';\r\nimport { getLocalData, setLocalData } from './Utils';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GameSetting extends cc.Component {\r\n    @property(cc.Slider)\r\n    bgmVolumeCrl: cc.Slider = null;\r\n\r\n    @property(cc.Slider)\r\n    effectVolumeCrl: cc.Slider = null;\r\n\r\n    _config: UserSetting = { bgmVolume: 1, effectVolume: 1 };\r\n\r\n    protected start(): void {\r\n        this._config = getLocalData<UserSetting>(UserSettingItemName);\r\n        this.bgmVolumeCrl.progress = this._config.bgmVolume;\r\n        this.effectVolumeCrl.progress = this._config.effectVolume;\r\n        this.bindEvents();\r\n    }\r\n\r\n    protected bindEvents(): void {\r\n        this.bgmVolumeCrl.node.on('slide', this.onBgmVolumeChange, this);\r\n        this.effectVolumeCrl.node.on('slide', this.onEffectVolumeChange, this);\r\n    }\r\n\r\n    onBgmVolumeChange(slider): void {\r\n        this._config.bgmVolume = slider.progress;\r\n        setLocalData(UserSettingItemName, this._config);\r\n        cc.audioEngine.setMusicVolume(this._config.bgmVolume);\r\n    }\r\n\r\n    onEffectVolumeChange(slider): void {\r\n        this._config.effectVolume = slider.progress;\r\n        setLocalData(UserSettingItemName, this._config);\r\n        cc.audioEngine.setEffectsVolume(this._config.effectVolume);\r\n    }\r\n\r\n    // protected onDestroy(): void {\r\n    //     this.bgmVolumeCrl.node.off('slider', this.onBgmVolumeChange, this);\r\n    //     this.effectVolumeCrl.node.off('slider', this.onEffectVolumeChange, this);\r\n    // }\r\n}\r\n"]}