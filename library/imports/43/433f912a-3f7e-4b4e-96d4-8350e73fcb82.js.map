{"version":3,"sources":["assets\\Script\\gamePlay\\effects\\EffectMgr.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import BaseEffect from './BaseEffect';\nimport SpineProperty from '../common/SpineProperty';\nimport { BlockSpecialType, GameCheckInfo, Location } from '../GameTypes';\nimport Grid from '../common/Grid';\nimport BaseBlock from '../block/BaseBlock';\n\nconst { ccclass, property } = cc._decorator;\n\ninterface EffectInfo {\n    location: Location;\n    style: SpineProperty;\n}\n\n@ccclass\nexport default class EffectMgr extends cc.Component {\n    @property(cc.Node)\n    effectRootNode: cc.Node = null;\n\n    @property(cc.Prefab)\n    effectPrefab: cc.Prefab = null;\n\n    @property({\n        displayName: '普通特效',\n        type: SpineProperty,\n    })\n    normalEffect: SpineProperty = null;\n\n    @property({\n        displayName: '行特效',\n        type: SpineProperty,\n    })\n    rowEffect: SpineProperty = null;\n\n    @property({\n        displayName: '列特效',\n        type: SpineProperty,\n    })\n    columnEffect: SpineProperty = null;\n\n    @property(cc.AudioClip)\n    rowEffectAudio: cc.AudioClip = null;\n\n    @property(cc.AudioClip)\n    columnEffectAudio: cc.AudioClip = null;\n\n    @property(cc.AudioClip)\n    bombEffectAudio: cc.AudioClip = null;\n\n    @property(cc.AudioClip)\n    specialBombEffectAudio: cc.AudioClip = null;\n\n    @property(cc.AudioClip)\n    effectAudio: cc.AudioClip = null;\n\n    @property([cc.AudioClip])\n    comboAudioList: Array<cc.AudioClip> = [];\n\n    @property([cc.AudioClip])\n    commentAudioList: Array<cc.AudioClip> = [];\n\n    // @property({\n    //     displayName: '炸弹特效',\n    //     type: SpineProperty,\n    // })\n    // bombEffect: SpineProperty = null;\n\n    // @property({\n    //     displayName: '特殊炸弹特效',\n    //     type: SpineProperty,\n    // })\n    // specialBombEffect: SpineProperty = null;\n\n    _effectLoop: cc.NodePool = null;\n\n    public onLoad(): void {\n        this._effectLoop = new cc.NodePool(BaseEffect);\n    }\n\n    public effectHandler(\n        grid: Grid<BaseBlock>,\n        gameCheckInfo: GameCheckInfo,\n        cd: () => void\n    ): void {\n        const { canEliminateCheckInfos } = gameCheckInfo;\n        const effectInfoList: Array<EffectInfo> = [];\n        for (const eliminateCheckInfo of canEliminateCheckInfos) {\n            const { eliminateBlockType, entryLocation, contiguousLocations } =\n                eliminateCheckInfo;\n            // 如果是特殊方块，则添加特效\n            if (eliminateBlockType !== BlockSpecialType.NONE) {\n                const style = this.getSpineProperty(eliminateBlockType);\n                style &&\n                    effectInfoList.push({\n                        location: entryLocation,\n                        style,\n                    });\n            }\n            // 给普通方块，添加特效\n            for (const location of contiguousLocations) {\n                effectInfoList.push({\n                    location,\n                    style: this.normalEffect,\n                });\n            }\n        }\n\n        // 特效释放回调\n        let step = 0;\n        const effectCount = effectInfoList.length;\n        const endCallBack = () => {\n            step++;\n            if (step === effectCount) {\n                cd && cd();\n            }\n        };\n\n        // 释放特效\n        for (const effectInfo of effectInfoList) {\n            const { location, style } = effectInfo;\n            const pos = grid.getCellPosition(location);\n            this.getEffect(style, pos, endCallBack);\n        }\n    }\n\n    public getSpineProperty(special: BlockSpecialType): SpineProperty {\n        switch (special) {\n            case BlockSpecialType.NONE:\n                return this.normalEffect;\n            case BlockSpecialType.ROW:\n                return this.rowEffect;\n            case BlockSpecialType.COLUMN:\n                return this.columnEffect;\n            default:\n                return null;\n        }\n    }\n\n    public getEffect(\n        style: SpineProperty,\n        initPos: cc.Vec2,\n        cd: () => void\n    ): BaseEffect {\n        let effect = this._effectLoop.get(\n            style,\n            initPos,\n            this.effectRootNode,\n            () => {\n                this.putEffect(effect);\n                cd && cd();\n            }\n        );\n        if (!effect) {\n            const newEffect = cc.instantiate(this.effectPrefab);\n            const effectComp = newEffect.getComponent(BaseEffect);\n            effectComp.reuse(style, initPos, this.effectRootNode, () => {\n                this.putEffect(newEffect);\n                cd && cd();\n            });\n            effect = newEffect;\n        }\n        return effect.getComponent(BaseEffect);\n    }\n\n    public putEffect(effectNode: cc.Node): void {\n        this._effectLoop.put(effectNode);\n    }\n\n    public setRootPosition(position: cc.Vec2): void {\n        this.effectRootNode.setPosition(position);\n    }\n\n    public playComboAudio(combo: number): void {\n        const audioClip = this.comboAudioList[combo - 1];\n        audioClip && this._playEffectAudio(audioClip);\n    }\n\n    public playCommentAudio(totalCombo: number): void {\n        const commentList = [11, 9, 7, 5, 3];\n        // 找到小于等于totalCombo的最大的commentIndex\n        const commentIndex = commentList.findIndex(\n            (comment) => totalCombo >= comment\n        );\n        if (commentIndex === -1) {\n            return;\n        }\n        const audioClip = this.commentAudioList[commentIndex];\n        audioClip && this._playEffectAudio(audioClip);\n    }\n\n    _playEffectAudio(audioClip: cc.AudioClip): void {\n        audioClip && cc.audioEngine.playEffect(audioClip, false);\n    }\n}\n"]}